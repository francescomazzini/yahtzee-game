{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["// this is a library we need, to read text input \"easily\"\nimport prompt from 'prompt-sync';\n\nconst input = prompt();\n\n// these are some codes to get the console to print in colors\n// see more details here:\n// https://bit.ly/3T8YcDQ\nconst Reset = \"\\x1b[0m\";\nconst BgRed = \"\\x1b[41m\";\nconst BgGreen = \"\\x1b[42m\";\nconst BgYellow = \"\\x1b[43m\";\nconst BgBlue = \"\\x1b[44m\";\nconst BgMagenta = \"\\x1b[45m\";\nconst BgCyan = \"\\x1b[46m\";\nconst BgWhite = \"\\x1b[47m\";\n\n//define the player interface\ninterface Player {\n  //color can be green, yellow, blue or magenta\n  color: string,\n  // color: string,\n  score: number[]\n}\n\n//this function creates the number of player wanted and set up their colors and score (default value)\nconst createPlayer = (players: Player[], numberNewPlayer: number): Player[] => {\n\n  if (numberNewPlayer < 1)\n    return players;\n\n  return [...createPlayer(players, numberNewPlayer - 1), {\n    color:\n      `\\x1b[4${numberNewPlayer + 1}m`, score: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  }];\n\n}\n\n\n//this function will manage the setup part (beginning) of the game\nconst startGame = (): Player[] => {\n\n  console.log('Welcome to Yahtzee Game!');\n\n  const numberOfPlayers: number = getNumberOfPlayer();\n\n  return createPlayer([], numberOfPlayers);\n\n}\n\n//this function will manage the correctness of the input of the \n//number of players (a value between 1-4) and return the correct value\n//when received\nconst getNumberOfPlayer = (): number => {\n  const answer = input(`How many people are going to play? (1-4) `)\n  switch (answer) {\n    case \"1\": return 1\n    case \"2\": return 2\n    case \"3\": return 3\n    case \"4\": return 4\n    default: {\n      console.log(\"Invalid number, please choose a number of players(1-4) \")\n      return getNumberOfPlayer();\n    }\n  }\n}\n\n//this function will manage the structure of the game itself\n//referring to any possible and needed state of the game\nconst game = (): void => {\n  const players: Player[] = startGame();\n  console.log(players);\n}\n\ngame();\n\n\n\n\n\n\n// const throwDie = (): number => Math.trunc(Math.random() * 6) + 1;\n\n\n// this is a small example to show how the pieces fit together\n// const example = (): void => {\n//   console.log(`type anything to throw a die, or ${BgRed}'exit'${Reset} to quit`);\n//   const command: string = input();\n//   if (command == 'exit') {\n//     console.log(`${BgGreen}See you next time!${Reset}`);\n//   } else {\n//     const die = throwDie();\n//     console.log(`you threw: ${BgBlue} ${die} ${Reset}`);\n//     example();\n//   }\n// }\n\n// example();\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AACA,yBAAmB;AAEnB,MAAM,QAAQ;AAKd,MAAM,QAAQ;AACd,MAAM,QAAQ;AACd,MAAM,UAAU;AAChB,MAAM,WAAW;AACjB,MAAM,SAAS;AACf,MAAM,YAAY;AAClB,MAAM,SAAS;AACf,MAAM,UAAU;AAWhB,MAAM,eAAe,CAAC,SAAmB,oBAAsC;AAE7E,MAAI,kBAAkB;AACpB,WAAO;AAET,SAAO,CAAC,GAAG,aAAa,SAAS,kBAAkB,IAAI;AAAA,IACrD,OACE,MAAS,kBAAkB;AAAA,IAAM,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAAA;AAAA;AAOzF,MAAM,YAAY,MAAgB;AAEhC,UAAQ,IAAI;AAEZ,QAAM,kBAA0B;AAEhC,SAAO,aAAa,IAAI;AAAA;AAO1B,MAAM,oBAAoB,MAAc;AACtC,QAAM,SAAS,MAAM;AACrB,UAAQ;AAAA,SACD;AAAK,aAAO;AAAA,SACZ;AAAK,aAAO;AAAA,SACZ;AAAK,aAAO;AAAA,SACZ;AAAK,aAAO;AAAA,aACR;AACP,cAAQ,IAAI;AACZ,aAAO;AAAA;AAAA;AAAA;AAOb,MAAM,OAAO,MAAY;AACvB,QAAM,UAAoB;AAC1B,UAAQ,IAAI;AAAA;AAGd;",
  "names": []
}
